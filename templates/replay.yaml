apiVersion: v1
kind: Template
metadata:
  name: replay${SUBPROJECT_POSTFIX}
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    generation: 1
    labels:      
      subproject: ${{SUBPROJECT}}
      app: chipster${SUBPROJECT_POSTFIX}
    name: replay${SUBPROJECT_POSTFIX}
  spec:
    replicas: 1
    selector:
      name: replay${SUBPROJECT_POSTFIX}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          subproject: ${{SUBPROJECT}}
          app: chipster${SUBPROJECT_POSTFIX}
          name: replay${SUBPROJECT_POSTFIX}
      spec:
        containers:
        - command:
          - node
          args:
          - lib/replay-server
          - https://${PROJECT}.${DOMAIN}
          - --username
          - replay_test
          - --password
          - ${{PASSWORD}}          
          - --influxdb
          - http://influxdb:8086/write?db=db
          - --schedule
          - '* * * * *:availability'
          - --schedule
          - '35 * * * *:tools-hourly2'
          - --schedule
          - '03 8 * * *:tools-hourly2 tools-daily2'
          - --schedule
          - '03 9 * * *:tools-hourly2 tools-daily2 example-sessions'
          image: docker-registry.default.svc:5000/${PROJECT}/cli-client
          imagePullPolicy: Always
          name: replay
          ports:
          - containerPort: 9000
            name: api
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /home/user/chipster-web-server/js/cli-client/results
            name: results
          - mountPath: /home/user/chipster-web-server/js/cli-client/tmp
            name: tmp
          - mountPath: /home/user/chipster-web-server/js/cli-client/logs
            name: logs
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 1600m
              memory: 512Mi
            requests:
              cpu: 1600m
              memory: 512Mi
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5          
        - image: docker-registry.default.svc:5000/${PROJECT}/filebeat
          imagePullPolicy: Always
          name: filebeat
          volumeMounts:
            - mountPath: /opt/chipster-web-server/logs
              name: logs
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 200m
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: results
          persistentVolumeClaim:
            claimName: replay-results${SUBPROJECT_POSTFIX}
        - name: tmp
          emptyDir: {}
        - name: logs
          emptyDir: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - replay
        from:
          kind: ImageStreamTag
          name: cli-client:latest
          namespace: ${{PROJECT}}
      type: ImageChange
        
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      subproject: ${{SUBPROJECT}}
      app: chipster${SUBPROJECT_POSTFIX}
    name: replay${SUBPROJECT_POSTFIX}
  spec:
    host: replay${SUBPROJECT_POSTFIX}-${PROJECT}.${DOMAIN}
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: replay${SUBPROJECT_POSTFIX}
      weight: 100
    wildcardPolicy: None
      
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      subproject: ${{SUBPROJECT}}
      app: chipster${SUBPROJECT_POSTFIX}
    name: replay${SUBPROJECT_POSTFIX}
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: api
    selector:
      name: replay${SUBPROJECT_POSTFIX}
    sessionAffinity: None
    type: ClusterIP
    
parameters:
- name: PROJECT
- name: DOMAIN
- name: SUBPROJECT
- name: SUBPROJECT_POSTFIX
- name: PASSWORD
