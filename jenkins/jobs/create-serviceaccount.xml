<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.29">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>NAME</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              {{SUBPROJECT_OPTIONS}}
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/chipster/chipster-openshift.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        <relativeTargetDir>chipster-openshift</relativeTargetDir>
      </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
      
set -e
set +x

OPENSHIFT_PROJECT=&quot;$(cat $OPENSHIFT_PROJECT_PATH)&quot;
      
oc login https://rahti.csc.fi:8443 --token=$OPENSHIFT_TOKEN

oc project $OPENSHIFT_PROJECT

project=&quot;$(oc project -q)&quot;
if [ &quot;$project&quot; != $OPENSHIFT_PROJECT ]; then
  echo &quot;project change failed, stop here&quot;
  exit 1
fi


pushd chipster-openshift

if oc get sa $NAME; then
  oc delete sa $NAME
fi

token=&quot;$(bash jenkins/create-serviceaccount.bash $NAME -q)&quot;

echo &quot;Your tool deployment configuration:&quot;
echo &quot;---------------------------------------------------------------------------------------------------&quot;
echo '
{
  &quot;okdToken&quot;: &quot;'$token'&quot;,
  &quot;subproject&quot;: &quot;'$NAME'&quot;,
  &quot;okdProject&quot;: &quot;chipster-dev&quot;,
  &quot;okdHost&quot;: &quot;https://rahti.csc.fi:8443&quot;
  &quot;chipsterUsername&quot;: &quot;demo&quot;
}
'
echo &quot;---------------------------------------------------------------------------------------------------&quot;
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper plugin="credentials-binding@1.15">
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <credentialsId>OPENSHIFT_TOKEN</credentialsId>
          <variable>OPENSHIFT_TOKEN</variable>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <org.jenkinsci.plugins.configfiles.buildwrapper.ConfigFileBuildWrapper plugin="config-file-provider@3.2">
      <managedFiles>
        <org.jenkinsci.plugins.configfiles.buildwrapper.ManagedFile>
          <fileId>OPENSHIFT_PROJECT</fileId>
          <replaceTokens>false</replaceTokens>
          <variable>OPENSHIFT_PROJECT_PATH</variable>
        </org.jenkinsci.plugins.configfiles.buildwrapper.ManagedFile>
      </managedFiles>
    </org.jenkinsci.plugins.configfiles.buildwrapper.ConfigFileBuildWrapper>
  </buildWrappers>
</project>