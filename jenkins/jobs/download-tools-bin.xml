<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.29">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <org.biouno.unochoice.ChoiceParameter plugin="uno-choice@2.1">
          <name>TOOLS_BIN_VERSION</name>
          <description></description>
          <randomName>choice-parameter-3542969651890309</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.48">
              <script>// Set the URL we want to read from, it is MySQL from official Library for this example, limited to 20 results only.
url = &quot;https://object.pouta.csc.fi/swift/v1/AUTH_chipcld/chipster-tools-bin/&quot;
try {
    def http_client = new URL(url).openConnection() as HttpURLConnection
    http_client.setRequestMethod(&apos;GET&apos;)
    http_client.connect()
    def response = &quot;&quot;
    if (http_client.responseCode == 200) {
        response = http_client.inputStream.getText(&apos;UTF-8&apos;)
    } else {
        println(&quot;HTTP response error&quot;)
        System.exit(0)
    }
    def list = response.readLines().collect { it.split(&quot;/&quot;)[0] }
    return list.sort()
} catch (Exception e) {
         println(e)
}</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.48">
              <script></script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>download-tools-bin</projectName>
          <choiceType>PT_SINGLE_SELECT</choiceType>
          <filterable>false</filterable>
          <filterLength>1</filterLength>
        </org.biouno.unochoice.ChoiceParameter>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/chipster/chipster-openshift.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        <relativeTargetDir>chipster-openshift</relativeTargetDir>
      </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
      
set -e
set +x

OPENSHIFT_PROJECT=&quot;$(cat $OPENSHIFT_PROJECT_PATH)&quot;
DEPLOY_CONF=&quot;$(cat $DEPLOY_CONF_PATH)&quot;
      
oc login https://rahti.csc.fi:8443 --token=$OPENSHIFT_TOKEN

oc project $OPENSHIFT_PROJECT

project=&quot;$(oc project -q)&quot;
if [ &quot;$project&quot; != $OPENSHIFT_PROJECT ]; then
  echo &quot;project change failed, stop here&quot;
  exit 1
fi

mkdir -p chipster-private/confs/chipster-all

echo &quot;$DEPLOY_CONF&quot; &gt; chipster-private/confs/chipster-all/deploy.yaml

pushd chipster-openshift

#source scripts/utils.bash

bash download-tools-bin.bash $TOOLS_BIN_VERSION
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper plugin="credentials-binding@1.15">
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <credentialsId>OPENSHIFT_TOKEN</credentialsId>
          <variable>OPENSHIFT_TOKEN</variable>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <org.jenkinsci.plugins.configfiles.buildwrapper.ConfigFileBuildWrapper plugin="config-file-provider@3.2">
      <managedFiles>
        <org.jenkinsci.plugins.configfiles.buildwrapper.ManagedFile>
          <fileId>DEPLOY_CONF</fileId>
          <replaceTokens>false</replaceTokens>
          <variable>DEPLOY_CONF_PATH</variable>
        </org.jenkinsci.plugins.configfiles.buildwrapper.ManagedFile>
        <org.jenkinsci.plugins.configfiles.buildwrapper.ManagedFile>
          <fileId>OPENSHIFT_PROJECT</fileId>
          <replaceTokens>false</replaceTokens>
          <variable>OPENSHIFT_PROJECT_PATH</variable>
        </org.jenkinsci.plugins.configfiles.buildwrapper.ManagedFile>
      </managedFiles>
    </org.jenkinsci.plugins.configfiles.buildwrapper.ConfigFileBuildWrapper>
  </buildWrappers>
</project>