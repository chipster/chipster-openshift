<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.29">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/chipster/chipster-openshift.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        <relativeTargetDir>chipster-openshift</relativeTargetDir>
      </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
      
set -e
set +x
      
if [ -d chipster-web-server ]; then
  pushd chipster-web-server; git pull; popd
else
  git clone --depth=1 https://github.com/chipster/chipster-web-server.git
fi

if [ -d chipster-web ]; then
  pushd chipster-web; git pull; popd
else
  git clone --depth=1 https://github.com/chipster/chipster-web.git
fi

oc login https://rahti.csc.fi:8443 --token=$OPENSHIFT_TOKEN

oc project $OPENSHIFT_PROJECT

project="$(oc project -q)"
if [ &quot;$project&quot; != $OPENSHIFT_PROJECT ]; then
  echo &quot;project change failed, stop here&quot;
  exit 1
fi

mkdir -p chipster-private/confs/chipster-all
mkdir -p chipster-private/confs/rahti-int

echo "$DEPLOY_CONF" &gt; chipster-private/confs/chipster-all/deploy.yaml
echo "$USERS_CONF" &gt; chipster-private/confs/chipster-all/users

# ldap won't work, but the script wants this
touch chipster-private/confs/rahti-int/jaas.config 

pushd chipster-openshift

source scripts/utils.bash

delete secret passwods || true
delete_all dc
delete_all route
delete_all service
delete_all pvc 

subproject="abc"

bash generate-passwords.bash subproject

bash deploy-postgres.bash fast subproject

bash create-secrets.bash subproject

bash deploy-servers.bash subproject

bash setup.bash subproject

wait_dc web-server

echo "The application is available in"
echo https://$(oc get route web-server -o json | jq .spec.host -r)</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper plugin="credentials-binding@1.15">
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <credentialsId>OPENSHIFT_PROJECT</credentialsId>
          <variable>OPENSHIFT_PROJECT</variable>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <credentialsId>OPENSHIFT_TOKEN</credentialsId>
          <variable>OPENSHIFT_TOKEN</variable>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <credentialsId>DEPLOY_CONF</credentialsId>
          <variable>DEPLOY_CONF</variable>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <credentialsId>USERS_CONF</credentialsId>
          <variable>USERS_CONF</variable>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>