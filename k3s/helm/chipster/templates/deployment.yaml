{{- range $deploymentKey, $deployment := .Values.deployments }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $deployment.name }}
  labels:
    app: chipster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chipster
      deployment: {{ $deployment.name }}
  template:
    metadata:
      labels:
        app: chipster
        deployment: {{ $deployment.name }}
    spec:
      containers:
        - name: {{ $.Chart.Name }}-{{ $deployment.name }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}            
          env:
            - name: JAVA_CLASS
              value: {{ $deployment.class }}
          image: {{ $deployment.image }}
          imagePullPolicy: {{ $.Values.image.localPullPolicy }}
          ports:
            {{- if $deployment.apiPort }}
            - name: api
              containerPort: {{ $deployment.apiPort }}
              protocol: TCP
            {{- end }}
            {{- if $deployment.adminPort }}
            - name: admin
              containerPort: {{ $deployment.adminPort }}
              protocol: TCP
            {{- end }}
            {{- if $deployment.eventsPort }}
            - name: events
              containerPort: {{ $deployment.eventsPort }}
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: /admin/alive
              port: admin
          # dead lock between auth and service-locator
          # readinessProbe:
          #   httpGet:
          #     path: /admin/alive
          #     port: admin
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
          volumeMounts:          
            - name: conf
              mountPath: {{ $deployment.workDir }}/conf
              readOnly: true
            {{- if eq $deployment.name "auth" }}
            - name: security
              mountPath: {{ $deployment.workDir }}/security
              readOnly: true
            {{- end }}
            {{- if eq $deployment.name "web-server" }}
            - name: app-conf
              mountPath: {{ $deployment.workDir }}/web-root/assets/conf
              readOnly: true
            {{- end }}
            {{- if and $.Values.toolsBin.version (or (eq $deployment.name "comp") (eq $deployment.name "toolbox")) }}
            - name: tools-bin
              mountPath: /mnt/tools
              readOnly: true
            {{- end }}
            {{- if eq $deployment.name "file-broker" }}
            - name: storage
              mountPath: /opt/chipster/storage
            {{- end }}
      volumes:
        - name: conf
          secret:
            secretName: {{ $deployment.name }}
        {{- if eq $deployment.name "auth" }}
        - name: security
          secret:
            secretName: auth-security
        {{- end}}
        {{- if eq $deployment.name "web-server" }}
        - name: app-conf
          secret:
            secretName: web-server-app
        {{- end}}
        {{- if and $.Values.toolsBin.version (or (eq $deployment.name "comp") (eq $deployment.name "toolbox")) }}
        - name: tools-bin
          persistentVolumeClaim:
            claimName: tools-bin-{{ $.Values.toolsBin.version }}
        {{- end}}
        {{- if eq $deployment.name "file-broker" }}
        - name: storage
          persistentVolumeClaim:
            claimName: file-broker-storage
        {{- end}}
{{- end }}
